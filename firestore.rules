rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to check user roles from their auth token
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    function isClinic() {
      return request.auth.token.clinic == true;
    }
    
    function isPatient() {
    	return request.auth.token.patient == true;
    }

    function isEnrolledInClinic(clinicId) {
      return request.auth.token.clinicId == clinicId;
    }
    
    // Rules for the 'clinics' collection
    match /clinics/{clinicId} {
      // Admins can do anything.
      // A specific clinic user can read their own document.
      // A patient can read the document of the clinic they are enrolled in.
      allow read: if isAdmin() || (isClinic() && request.auth.uid == clinicId) || (isPatient() && isEnrolledInClinic(clinicId));
      
      // Only admins can create, update, or delete clinic documents.
      allow write: if isAdmin();

      // Rules for the 'patients' sub-collection within a clinic
      match /patients/{patientId} {
        // Admins can read any patient's data.
        // A clinic user can read data for any patient within their own clinic.
        // A patient can only read their own data.
        allow read: if isAdmin() || (isClinic() && request.auth.uid == clinicId) || (isPatient() && request.auth.uid == patientId);
        
        // Admins and the managing clinic can create, update, or delete patients.
        allow write: if isAdmin() || (isClinic() && request.auth.uid == clinicId);
      }
    }
  }
}