
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Helper function to check if a user is a clinic user
    function isClinic() {
      return request.auth.token.clinic == true;
    }
    
    // Helper function to check if a user is the owner of a document (their UID matches the doc ID)
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Admins can read and write all data. This is a broad rule that applies everywhere.
    // More specific rules below can still apply.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Rules for the 'clinics' collection
    match /clinics/{clinicId} {
      // A logged-in patient can read their assigned clinic's data.
      // A clinic user can read their own clinic's data.
      allow read: if request.auth != null && (request.auth.token.clinicId == clinicId || isOwner(clinicId));
      
      // Only admins can create, update, or delete the main clinic documents.
      allow create, update, delete: if isAdmin();

      // Rules for the 'patients' subcollection within a clinic
      match /patients/{patientId} {
        // The assigned clinic user (owner of the clinic doc) can manage all their patients.
        // A patient can read and write their own specific data document.
        allow read, write: if (isClinic() && isOwner(clinicId)) || isOwner(patientId);
        
        // Only the assigned clinic user can create or delete patients in their subcollection.
        allow create, delete: if isClinic() && isOwner(clinicId);
      }
    }
  }
}
